@inject ChoiceA.Service.IGroupService service;

@model ChoiceA.Models.Student

@{
    ViewData["Title"] = "Create";
   
}

<h1>Create</h1>

<h4>Student</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
           
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="Group"></label>
                    <select asp-for="Group" asp-items=" new SelectList(service.GetGroupList())"></select>
                    @*<label asp-for="Group" class="control-label"></label>
                    @Html.DropDownListFor(m => m.Group, service.GetGroupList() as IEnumerable<SelectListItem>)*@
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
